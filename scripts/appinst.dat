# Copyright (c) 2009-2011 by Enthought, Inc.
# All rights reserved.
"""
Example appinst data file, note that this is Python code


Purpose of this file:
=====================

To be able to install an application using all the functionality
that AppInst provides in a single file. For example you can install
of an application using the code:

   import appinst
   appinst.install_from_dat("ipython.dat")

However you are not required to use this file, you can also call the
various functions AppInst provides yourself. Just likely having to
write more code yourself.


Variables to define:
====================

At least the variable SHORTCUTS must be defined to declare something
for AppInst to do. AppInst will install all shortcuts in a menu named by:
custom_tools.FULL_NAME

SHORTCUTS defines the shortcuts to the application(s) in a cross-platform
way. That is:
   * On Windows: The menus end up in the 'Start Menu', quicklaunch icons
       end up in the QuickLaunch bar, and desktop icons show up on user's
       desktops.
   * On OSX: The menus end up in the '/Applications' directory, quicklaunch
       icons are added to the Dock, and desktop icons show up on the user's
       desktop.
   * On Linux: The menus end up in the Gnome or KDE system menus, quicklaunch
       icons are currently ignored, and desktop icons get added to the user's
       desktop.

SHORTCUTS is a list of dictionaries, one dictionary per desired shortcut.
Each shortcut dictionary can have the following keys:

    cmd: (required)
        A list of strings where the first item in the list is the executable
        command and the other items are arguments to be passed to that
        command. Each argument should be a separate item in the list.
        Note that you can use the special text markers listed here as the
        first command string to represent standard commands that are platform
        dependent:

        '{{FILEBROWSER}}' specifies that the following arguments are
                paths to be opened in the OS's file system explorer.
        '{{WEBBROWSER}}' specifies that the following arguments are
                paths to be opened in the OS's standard, or user's default,
                web browser.

    name: (required)
        The display name for this shortcut.

    comment: (required)
        A description for the shortcut, typically becomes fly-over
        help. On Windows, this is what you see in a yellow box when
        hovering over a menu item.

    terminal: (required)
        A boolean value representing whether the shortcut should
        run within a shell / terminal (like ipython does).

    id: (required on Linux)
         On Linux, the id is used for the name of the '.desktop' file.
         This is used to name the shortcut files on platforms where
         the filename is not the display name the user sees.

    icon: (optional, only effects Windows and Linux)
        Optional path to an .ico file to use as the icon for this
        shortcut. Used on both Windows and Linux.

    working_dir: (optional, only effects Windows)
        Optional path of the directory to start the executable command in (the
        is 'Start in' field in the shortcut properties dialog).

    icns: (optional, only effects MacOSX)
        Optional path to a MacOSX .icns file,
        default to 'PythonInterpreter.icns' (Python rocket)

    version: (optional, only effects MacOSX)
        Optional MacOSX CFBundleVersion in Info.plist of .app,
        defaults to '1.0.0'

    quicklaunch: (optional, boolean)
        Whether or not a quicklaunch item should be created for this shortcut.
        This does not solely determine if a quicklaunch item will be created
        as the user must have granted permission to create quicklaunch
        shortcuts at all during the installation of the application
        environment this shortcut request is part of. That setting is the
        ADDTOLAUNCHER variable stored in custom_tools\Property.dat. When the
        Property.dat file does not exist, the default for ADDTOLAUNCHER is
        True, which means this setting controls whether the quicklaunch
        shortcut is created or not.

    desktop: (optional, boolean)
        Whether or not a desktop item should be created for this shortcut.
        This does not solely determine if a desktop item will be created as
        the user must have granted permission to create desktop shortcuts at
        all during the installation of the application environment this shortcut
        request is part of. That setting is the ADDTODESKTOP variable stored in
        custom_tools\Property.dat. When the Property.dat file does not exist,
        the default for ADDTODESKTOP is True, which means this setting controls
        whether the desktop shortcut is created or not.

Notes:
  * The location of icons files, can be specified by the absolute or
    relative path. Where a relative path is understood to be relative to the
    location of this (appinst data) file.
  * The location of the executable command, i.e. the first element in the
    value corresponding to 'cmd', is assumed to be located in sys.prefex/bin
    (on Windows <sys.prefex>/Scripts, unless the string starts with '..'.
    In the later case it is assumed to be relative to the location of this
    (appinst data) file.
"""

from pkg_resources import Requirement, resource_filename
filename = resource_filename(Requirement.parse("labtools"),"doc/index.html")


SHORTCUTS = [{ # dls
        'cmd': ['dls'],
        'comment': 'DLS experiment runner',
        #'icon': 'pycon.ico',
        'id': 'dls',
        'name': 'DLS',
        'desktop': False,
        'quicklaunch': False,
        'terminal': False,
},
{ # labtools
        'cmd': ['labtools'],
        'comment': 'Labtools experiment runner',
        #'icon': 'pycon.ico',
        'id': 'labtools',
        'name': 'Labtools',
        'desktop': False,
        'quicklaunch': False,
        'terminal': False,

},
{#documentation
        'cmd': ['{{WEBBROWSER}}', filename],
        'comment': 'Labtools documentation',
        #'icon': 'pycon.ico',
        'id': 'help',
        'name': 'Help',
        'desktop': False,
        'quicklaunch': False,
        'terminal': False,

}

]